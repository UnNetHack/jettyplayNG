/*
 * FindDialog.java
 *
 * Created on 07-Feb-2010, 22:36:29
 */

package jettyplay;

/**
 *
 * @author ais523
 */
public class FindDialog extends javax.swing.JDialog {
    private final MainFrame sendSearchActionsTo;

    /** Creates new form FindDialog
     * @param parent The frame that this dialog box belongs to
     * @param sendSearchActionsTo The JettyView to send search actions to
     */
    public FindDialog(java.awt.Frame parent, MainFrame sendSearchActionsTo) {
        super(parent, false);
        initComponents();
        this.sendSearchActionsTo = sendSearchActionsTo;
        this.setTitle("Find");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        searchPanel = new javax.swing.JPanel();
        searchFieldLabel = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchResultLabel = new javax.swing.JLabel();
        directionPanel = new javax.swing.JPanel();
        directionForwardRadioButton = new javax.swing.JRadioButton();
        directionBackwardRadioButton = new javax.swing.JRadioButton();
        ignoreCaseCheckBox = new javax.swing.JCheckBox();
        regexCheckBox = new javax.swing.JCheckBox();
        wrapAroundCheckBox = new javax.swing.JCheckBox();
        findNextButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        searchPanel.setName("searchPanel"); // NOI18N

        searchFieldLabel.setDisplayedMnemonic('s');
        searchFieldLabel.setLabelFor(searchField);
        searchFieldLabel.setText("Search for:");
        searchFieldLabel.setName("searchFieldLabel"); // NOI18N
        searchPanel.add(searchFieldLabel);

        searchField.setColumns(30);
        searchField.setName("searchField"); // NOI18N
        searchPanel.add(searchField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 7);
        getContentPane().add(searchPanel, gridBagConstraints);

        searchResultLabel.setText("No search performed yet.");
        searchResultLabel.setName("searchResultLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 3, 7);
        getContentPane().add(searchResultLabel, gridBagConstraints);

        directionPanel.setName("directionPanel"); // NOI18N
        directionPanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(directionForwardRadioButton);
        directionForwardRadioButton.setMnemonic('o');
        directionForwardRadioButton.setSelected(true);
        directionForwardRadioButton.setText("Forward");
        directionForwardRadioButton.setName("directionForwardRadioButton"); // NOI18N
        directionPanel.add(directionForwardRadioButton, new java.awt.GridBagConstraints());

        buttonGroup1.add(directionBackwardRadioButton);
        directionBackwardRadioButton.setMnemonic('b');
        directionBackwardRadioButton.setText("Backward");
        directionBackwardRadioButton.setName("directionBackwardRadioButton"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        directionPanel.add(directionBackwardRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 3, 7);
        getContentPane().add(directionPanel, gridBagConstraints);

        ignoreCaseCheckBox.setMnemonic('i');
        ignoreCaseCheckBox.setText("Ignore case");
        ignoreCaseCheckBox.setName("ignoreCaseCheckBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 0);
        getContentPane().add(ignoreCaseCheckBox, gridBagConstraints);

        regexCheckBox.setMnemonic('r');
        regexCheckBox.setText("Use regular expressions (Perl-like)");
        regexCheckBox.setName("regexCheckBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 0);
        getContentPane().add(regexCheckBox, gridBagConstraints);

        wrapAroundCheckBox.setMnemonic('w');
        wrapAroundCheckBox.setSelected(true);
        wrapAroundCheckBox.setText("Wrap around");
        wrapAroundCheckBox.setName("wrapAroundCheckBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 7, 0);
        getContentPane().add(wrapAroundCheckBox, gridBagConstraints);

        findNextButton.setMnemonic('f');
        findNextButton.setText("Find Next");
        findNextButton.setName("findNextButton"); // NOI18N
        findNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findNextButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 7, 7);
        getContentPane().add(findNextButton, gridBagConstraints);

        closeButton.setMnemonic('c');
        closeButton.setText("Close");
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 7, 7);
        getContentPane().add(closeButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findNextButtonActionPerformed
        String result = sendSearchActionsTo.searchInTtyrec(
                searchField.getText(),
                directionForwardRadioButton.isSelected(),
                regexCheckBox.isSelected(),
                ignoreCaseCheckBox.isSelected(),
                wrapAroundCheckBox.isSelected());
        searchResultLabel.setText(result);
    }//GEN-LAST:event_findNextButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton directionBackwardRadioButton;
    private javax.swing.JRadioButton directionForwardRadioButton;
    private javax.swing.JPanel directionPanel;
    private javax.swing.JButton findNextButton;
    private javax.swing.JCheckBox ignoreCaseCheckBox;
    private javax.swing.JCheckBox regexCheckBox;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchFieldLabel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel searchResultLabel;
    private javax.swing.JCheckBox wrapAroundCheckBox;
    // End of variables declaration//GEN-END:variables

    void fixDefaultFocus() {
        getRootPane().setDefaultButton(findNextButton);
    }
}
